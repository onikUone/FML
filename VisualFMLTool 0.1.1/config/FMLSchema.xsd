<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="qualified" >	
	<xs:element name="FuzzyController" type="FuzzyControllerType">
		<xs:annotation>
			<xs:documentation>Fuzzy Controller Program</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="FuzzyControllerType">
		<xs:sequence>
			<xs:element name="KnowledgeBase" type="KnowledgeBaseType">
				<xs:annotation>
					<xs:documentation>Fuzzy Concepts Collection</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice minOccurs="1" maxOccurs="unbounded">
				<xs:element name="RuleBase" type="MamdaniRuleBaseType">
					<xs:annotation>
						<xs:documentation>Mamdani Fuzzy Rules Collection</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="RuleBase" type="TskRuleBaseType">
					<xs:annotation>
						<xs:documentation>Tsk Fuzzy Rules Collection</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="ip" default="127.0.0.1">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:pattern value="((1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5]).){3}(1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="KnowledgeBaseType">
		<xs:sequence>
		    <xs:choice minOccurs="0" maxOccurs="unbounded">
			 <xs:element name="FuzzyVariable" type="FuzzyVariableType">
				<xs:annotation>
					<xs:documentation>Fuzzy Concept Item</xs:documentation>
				</xs:annotation>
			 </xs:element>
			 <xs:element name="TSKVariable" type="TSKVariableType">
				<xs:annotation>
					<xs:documentation>Fuzzy Concept Item</xs:documentation>
				</xs:annotation>
			</xs:element>
		   </xs:choice>	
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FuzzyVariableType">
		<xs:sequence>
			<xs:element name="FuzzyTerm" type="FuzzyTermType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Fuzzy Set</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="name" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:whiteSpace value="collapse"/>
					<xs:pattern value="(([A-Z])|([a-z]))+([A-Z]|[a-z]|[0-9])*"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="defuzzifier" default="COG">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:pattern value="MOM|COG|COA|WA|Custom"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="accumulation" default="MAX">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:pattern value="MAX|SUM"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="scale" type="xs:string" />
		<xs:attribute name="domainleft" type="xs:float"  use="required"/>
		<xs:attribute name="domainright" type="xs:float" use="required"/>
		<xs:attribute name="defaultValue" type="xs:float" default="0"/>
		<xs:attribute name="type"  default="input">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:pattern value="input|output"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="FuzzyTermType">
		<xs:choice>
			<xs:element name="RightLinearShape" type="TwoParamType" >
				<xs:annotation>
					<xs:documentation>Right Linear Fuzzy Set</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LeftLinearShape" type="TwoParamType" >
				<xs:annotation>
					<xs:documentation>Left Linear Fuzzy Set</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PIShape" type="TwoParamType" >
				<xs:annotation>
					<xs:documentation>Pishape Fuzzy Set</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TriangularShape" type="ThreeParamType" >
				<xs:annotation>
					<xs:documentation>Triangle Fuzzy Set</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GaussianShape" type="TwoParamType" >
				<xs:annotation>
					<xs:documentation>Gaussian Fuzzy Set</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RightGaussianShape" type="TwoParamType" >
				<xs:annotation>
					<xs:documentation>Right Gaussian Fuzzy Set</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LeftGaussianShape" type="TwoParamType" >
				<xs:annotation>
					<xs:documentation>Left Gaussian Fuzzy Set</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TrapezoidShape" type="FourParamType" >
				<xs:annotation>
					<xs:documentation>Trapezoid Fuzzy Set</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SingletonShape" type="OneParamType" >
				<xs:annotation>
					<xs:documentation>Singleton Fuzzy Set</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RectangularShape" type="TwoParamType" >
				<xs:annotation>
					<xs:documentation>Rectagle Fuzzy Set</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ZShape" type="TwoParamType" >
				<xs:annotation>
					<xs:documentation>Z Fuzzy Set</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SShape" type="TwoParamType" >
				<xs:annotation>
					<xs:documentation>S Fuzzy Set</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserShape" type="UserShapeType" >
				<xs:annotation>
					<xs:documentation>Custom Fuzzy Set</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="complement" default="false">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:pattern value="true|false"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="OneParamType">
		<xs:attribute name="Param1" type="xs:float" use="required"/>
	</xs:complexType>
	<xs:complexType name="TwoParamType">
		<xs:attribute name="Param1" type="xs:float" use="required"/>
		<xs:attribute name="Param2" type="xs:float" use="required"/>
	</xs:complexType>
	<xs:complexType name="ThreeParamType">
		<xs:attribute name="Param1" type="xs:float" use="required"/>
		<xs:attribute name="Param2" type="xs:float" use="required"/>
		<xs:attribute name="Param3" type="xs:float" use="required"/>
	</xs:complexType>
	<xs:complexType name="FourParamType">
		<xs:attribute name="Param1" type="xs:float" use="required"/>
		<xs:attribute name="Param2" type="xs:float" use="required"/>
		<xs:attribute name="Param3" type="xs:float" use="required"/>
		<xs:attribute name="Param4" type="xs:float" use="required"/>
	</xs:complexType>
	<xs:complexType name="UserShapeType">
		<xs:sequence>
			<xs:element name="Point" type="PointType" minOccurs="2" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PointType">
		<xs:attribute name="x" type="xs:float" use="required"/>
		<xs:attribute name="y" type="xs:float" use="required"/>
	</xs:complexType>
	<xs:complexType name="TSKVariableType">
		<xs:sequence>
		  	<xs:element name="TSKTerm" type="TSKTermType"  maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>TSK Value</xs:documentation>
				</xs:annotation>
			</xs:element>	
		</xs:sequence>
		<xs:attribute name="name" type="xs:string"/>
		<xs:attribute name="defuzzifier" type="xs:string"  fixed="WA"/>
		<xs:attribute name="accumulation" default="MAX">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:pattern value="MAX|SUM"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="scale" type="xs:string"/>
		<xs:attribute name="defaultValue" type="xs:float" default="0"/>
		<xs:attribute name="type" fixed="output" use="required"/>
		</xs:complexType>
		 <xs:complexType name="TSKTermType">
			<xs:sequence>
				<xs:element name="TSKValue" type="xs:float" maxOccurs="unbounded"/>
			</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="order">
			<xs:simpleType>
				<xs:restriction base="xs:int">
					<xs:pattern value="0|1"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		</xs:complexType>
		
		
	<xs:complexType name="RuleBaseType">
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="activationMethod" default="MIN">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:pattern value="PROD|MIN"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="andMethod" default="MIN">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:pattern value="PROD|MIN"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="orMethod" default="MAX">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:pattern value="PROBOR|MAX"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="type" use="required">
			<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="TSK|Tsk|tsk|Mamdani|mamdani"/>
					</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
		
		
	<xs:complexType name="MamdaniRuleBaseType">
		<xs:complexContent>
     		<xs:extension base="RuleBaseType">
				<xs:sequence>
					<xs:element name="Rule" type="MamdaniFuzzyRuleType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Fuzzy Relations Collection</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="TskRuleBaseType">
		<xs:complexContent>
     		<xs:extension base="RuleBaseType">
				<xs:sequence>
					<xs:element name="Rule" type="TskFuzzyRuleType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Fuzzy Relations Collection</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="MamdaniFuzzyRuleType">
		<xs:sequence>
			<xs:element name="Antecedent" type="AntecedentType">
				<xs:annotation>
					<xs:documentation>Fuzzy Rule Antecedent</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Consequent" type="MamdaniConsequentType">
				<xs:annotation>
					<xs:documentation>Fuzzy Rule Consequent</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="operator">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:pattern value="PROD|MIN|PROBOR|MAX"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="connector" default="and">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:pattern value="and|AND|OR|or"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="weight" type="xs:double" use="required"/>
		<xs:attribute name="name" type="xs:string" use="required"/>
	</xs:complexType>
	<xs:complexType name="TskFuzzyRuleType">
		<xs:sequence>
			<xs:element name="Antecedent" type="AntecedentType">
				<xs:annotation>
					<xs:documentation>Fuzzy Rule Antecedent</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Consequent" type="TskConsequentType">
				<xs:annotation>
					<xs:documentation>Fuzzy Rule Consequent</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="operator">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:pattern value="PROD|MIN|PROBOR|MAX"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="connector" default="and">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:pattern value="and|AND|OR|or"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="weight" type="xs:double" use="required"/>
		<xs:attribute name="name" type="xs:string" use="required"/>
	</xs:complexType>
	<xs:complexType name="AntecedentType">
		<xs:sequence>
			<xs:element name="Clause" type="ClauseType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Antecedent Clause Fuzzy Rule</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="MamdaniConsequentType">
		<xs:sequence>
			<xs:element name="Clause" type="ClauseType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Consequent Mamdani Clause Fuzzy Rule</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TskConsequentType">
		<xs:sequence>
			<xs:element name="Clause" type="TskClauseType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Consequent Tsk Clause Fuzzy Rule</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ClauseType">
		<xs:sequence>
			<xs:element name="Variable">
				<xs:annotation>
					<xs:documentation>Clause Fuzzy Variable</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:whiteSpace value="collapse"/>
						<xs:pattern value="(([A-Z])|([a-z]))+([A-Z]|[a-z]|[0-9])*"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="Term" type="xs:string">
				<xs:annotation>
					<xs:documentation>Clause Fuzzy Term</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="modifier" use="optional">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:pattern value="above|below|extremely|intensify|more_or_less|norm|not|plus|slightly|somewhat|very"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="TskClauseType">
		<xs:sequence>
			<xs:element name="Variable">
				<xs:annotation>
					<xs:documentation>Clause Fuzzy Variable</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:whiteSpace value="collapse"/>
						<xs:pattern value="(([A-Z])|([a-z]))+([A-Z]|[a-z]|[0-9])*"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="Term" type="xs:string">
				<xs:annotation>
					<xs:documentation>Clause Fuzzy Term</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
</xs:schema>
